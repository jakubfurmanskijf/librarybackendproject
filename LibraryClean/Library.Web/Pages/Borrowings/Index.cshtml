@page
@model Library.Web.Pages.Borrowings.IndexModel
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@{
    ViewData["Title"] = "Borrowings";
    string Dt(DateTime d) => d.ToLocalTime().ToString("dd.MM.yyyy HH:mm");
}

<div class="d-flex align-items-center justify-content-between mb-3">
    <h2 class="mb-0">Borrowings</h2>
    <div class="d-flex gap-2">
        <a class="btn btn-primary" asp-page="/Borrowings/Borrow">Borrow</a>
        <a class="btn btn-outline-primary" asp-page="/Borrowings/Return">Return</a>
    </div>
</div>

@if ((Model.Items?.Count ?? 0) == 0)
{
    <div class="alert alert-light border">
        No borrowings yet.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table align-middle">
            <thead class="table-light">
                <tr>
                    <th style="width:70px;">Id</th>
                    <th>Book</th>
                    <th>Member</th>
                    <th>Borrowed</th>
                    <th>Due</th>
                    <th style="width:140px;">Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var b in Model.Items!)
                {
                    var statusText = b.IsReturned ? "Returned" : (b.IsOverdue ? "Overdue" : "Borrowed");
                    var badgeClass = b.IsReturned ? "bg-success" : (b.IsOverdue ? "bg-danger" : "bg-secondary");

                    <tr>
                        <td>@b.Id</td>
                        <td class="fw-semibold">@b.Book?.Title</td>
                        <td>@b.Member?.FullName</td>
                        <td>@Dt(b.BorrowedAtUtc)</td>
                        <td>@Dt(b.DueAtUtc)</td>
                        <td>
                            <span class="badge @badgeClass">@statusText</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
